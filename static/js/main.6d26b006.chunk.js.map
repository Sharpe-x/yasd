{"version":3,"sources":["components/VersionSupport.tsx","utils/fetcher.ts","pages/Index/components/TrafficCell/index.tsx","i18n lazy /^/.//.*//.*/.json$/ groupOptions: {} namespace object","components/FullLoading/index.tsx","components/NewVersionAlert.tsx","components/ScrollToTop/index.tsx","components/NetworkErrorModal.tsx","components/ChangeLanguage.tsx","components/ProfileCell/index.tsx","components/Ad.tsx","pages/Landing/components/Header.tsx","pages/Landing/hooks.ts","pages/Landing/utils.ts","pages/Landing/Regular.tsx","pages/Landing/Surge.tsx","pages/Index/components/HostInfo.tsx","pages/Index/components/Events.tsx","pages/Index/components/MenuTile.tsx","pages/Index/components/SetHostModal.tsx","pages/Index/components/CapabilityTile.tsx","pages/Index/menu.tsx","pages/Index/index.tsx","components/PageLayout/index.tsx","App.tsx","AppContainer.tsx","i18n/index.ts","index.tsx","utils/index.ts","components/Data/index.tsx","hooks/useSetState.ts","hooks/useVersionSupport.ts","utils/constant.ts","utils/validation.ts","utils/store.ts","models/profile.tsx","serviceWorkerRegistration.ts"],"names":["VersionSupport","macos","ios","children","useVersionSupport","Fragment","client","axios","create","baseURL","transformRequest","data","headers","JSON","stringify","setServer","host","port","key","options","useTls","tls","defaults","timeout","fetcher","requestConfig","request","then","res","catch","error","response","console","status","toast","message","toastId","LineChart","loadable","fallback","css","Cell","Title","Data","REFRESH_RATE","Index","t","useTranslation","profile","useProfile","traffic","trafficError","useSWR","undefined","url","nowTime","Date","now","revalidateOnFocus","revalidateOnReconnect","refreshInterval","dedupingInterval","trafficDatasets","setTrafficDatasets","useState","up","down","newDatasets","useMemo","label","activeInterface","aggregation","outCurrentSpeed","in","inCurrentSpeed","outMaxSpeed","out","inMaxSpeed","name","interface","conn","useEffect","time","x","y","id","bytes","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","e","Error","code","ids","keys","Object","module","exports","FullLoadingWrapper","FullLoading","Spinner","currentVersion","process","NewVersionAlert","isOpen","setIsOpen","versionUrl","setVersionUrl","lastUsedVersion","store","get","LastUsedVersion","satisfies","set","Modal","onClose","ModalWrapper","ModalHeader","title","ModalFooter","align","ButtonGroup","href","target","rel","Button","variant","onClick","ScrollToTop","pathname","useLocation","isModalOpen","removeModal","useModal","history","useHistory","push","replace","path","scroll","window","scrollY","unregister","listen","location","action","scrollTo","state","useScrollMemory","NetworkErrorModal","reloadButton","reload","ChangeLanguage","i18n","isLoading","setIsLoading","onChange","useCallback","LastUsedLanguage","value","changeLanguage","finally","Select","hideLabel","noMargin","language","disabled","ProfileCell","checkConnectivity","showDelete","onDelete","available","setAvailable","variantStyle","isMounted","method","stopPropagation","preventDefault","IconButton","Bin","Ad","showDynamicAd","useRef","ad","setAd","isRunInSurge","current","list","adList","filter","item","length","OutboundLink","eventLabel","to","Header","Heading","size","useAuthData","protocol","hasError","setHasError","keepCredential","setKeepCredential","setData","async","tryHost","hostname","basicInfoReq","responseType","environmentReq","basicInfo","environment","all","deviceName","platform","includes","platformVersion","platformBuild","Page","existingProfiles","setExistingProfiles","getExistingProfiles","useSetState","profileDispatch","useProfileDispatch","getValues","register","handleSubmit","control","clearErrors","setError","reset","formState","errors","useForm","defaultValues","selectProfile","profiles","find","LastUsedProfile","type","payload","storedExistingProfiles","ExistingProfiles","onSubmit","newProfile","config","uuid","newProfiles","addProfile","Number","err","Input","invalid","validationHint","getValidationHint","required","placeholder","render","field","Checkbox","checked","LoadingButton","stretch","loadingLabel","deleteProfile","lastId","result","HostInfo","dayjs","extend","localizedFormat","Events","events","slice","identifier","content","date","format","MenuTileContent","MenuTileTitle","MenuTile","props","Card","SetHostModal","setModal","currentProfile","Badge","Laptop","CapabilityTile","api","link","capability","toggle","enabled","mutate","Toggle","labelChecked","labelUnchecked","menu","component","isEnabled","Boolean","gte","subTitle","systemProxy","enhancedMode","usePlatform","usePlatformVersion","usePlatformBuild","toggleSystemProxy","delay","toggleEnhancedMode","onDoubleClick","forceRefresh","remove","TrafficCell","startsWith","open","PageLayout","PoliciesPage","RequestsPage","TrafficPage","ModulesPage","ScriptingPage","EvaluatePage","DnsPage","DevicesPage","ProfilePage","ToastContainer","OriginalToastContainer","REACT_APP_DEBUG_GA","REACT_APP_ENABLE_GA","ReactGA","initialize","debug","App","isNetworkModalOpen","setIsNetworkModalOpen","hasInit","setHasInit","isCurrentVersionFetched","onCloseApplication","pageview","httpClient","currentPlatformVersion","onError","refreshWhenOffline","exact","Surge","ReactRouter","args","styleCache","createCache","AppContainer","theme","light","use","initReactI18next","ChainedBackend","init","lng","navigator","substr","fallbackLng","supportedLngs","nonExplicitSupportedLngs","interpolation","escapeValue","backend","backends","resourcesToBackend","ns","clb","resources","ReactDOM","StrictMode","document","getElementById","serviceWorkerRegistration","documentElement","style","mod","polyfill","isFalsy","obj","isTruthy","unregisterAsync","DataGroup","DataRow","DataRowMain","DataRowSub","initialState","setState","currentState","typeMap","fieldError","profileReducer","updated","profileId","findIndex","splice","updateStoredProfile","ProfileContext","createContext","ProfileDispatchContext","ProfileProvider","dispatch","useReducer","Provider","React","useContext","useSurgeHost","context","isLocalhost","match","URL","origin","addEventListener","swUrl","fetch","contentType","indexOf","serviceWorker","ready","registration","registerValidSW","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess"],"mappings":"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","file":"static/js/main.6d26b006.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport React from 'react'\n\nimport { useVersionSupport } from '../hooks'\n\ninterface VersionSupportProps {\n  macos?: string\n  ios?: string\n}\n\nconst VersionSupport: React.FC<VersionSupportProps> = ({\n  macos,\n  ios,\n  children,\n}) => {\n  const isSupported = useVersionSupport({ macos, ios })\n\n  if (isSupported) {\n    return <React.Fragment>{children}</React.Fragment>\n  }\n\n  return null\n}\n\nexport default VersionSupport\n","import axios, { AxiosRequestConfig } from 'axios'\nimport { toast } from 'react-toastify'\n\nconst client = axios.create({\n  baseURL: '/v1',\n  transformRequest: [\n    (data, headers) => {\n      if (!headers['x-surge-host']) {\n        delete headers['Content-Type']\n      } else {\n        headers['Content-Type'] = 'application/json;charset=UTF-8'\n      }\n\n      if (data) {\n        return JSON.stringify(data)\n      }\n    },\n  ],\n})\n\nexport function setServer(\n  host: string,\n  port: number,\n  key: string,\n  options?: {\n    tls?: boolean\n  },\n): void {\n  const useTls = options?.tls === true\n\n  client.defaults.headers['x-key'] = key\n  client.defaults.timeout = 5000\n\n  client.defaults.baseURL = `${useTls ? 'https:' : 'http:'}//${host}:${port}/v1`\n}\n\nconst fetcher = <T>(requestConfig: AxiosRequestConfig): Promise<T> => {\n  return client\n    .request<T>(requestConfig)\n    .then((res) => res.data)\n    .catch((error) => {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error(error.response.data)\n        console.error(error.response.status)\n        toast.error('请求错误: ' + error.message + `(${error.response.status})`)\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.error(error.request)\n        toast.error('无法连接服务器: ' + error.message, {\n          toastId: error.message,\n        })\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Error', error.message)\n        toast.error('发生错误: ' + error.message)\n      }\n\n      throw error\n    })\n}\n\nexport default fetcher\nexport { client as httpClient }\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled/macro'\nimport css from '@emotion/css/macro'\nimport loadable from '@loadable/component'\nimport bytes from 'bytes'\nimport { ChartPoint } from 'chart.js'\nimport { useTranslation } from 'react-i18next'\nimport useSWR from 'swr'\nimport tw from 'twin.macro'\nimport React, { useEffect, useMemo, useState } from 'react'\n\nimport { useProfile } from '../../../../models/profile'\nimport { ConnectorTraffic, Traffic } from '../../../../types'\nimport fetcher from '../../../../utils/fetcher'\n\nconst LineChart = loadable(() => import('./components/LineChart'), {\n  fallback: (\n    <div\n      tw=\"flex items-center justify-center text-sm text-gray-500\"\n      css={css`\n        height: 200px;\n      `}\n    >\n      Loading...\n    </div>\n  ),\n})\n\nconst Cell = styled.div`\n  ${tw`px-4 py-3`}\n`\n\nconst Title = styled.div`\n  ${tw`text-xs md:text-sm text-gray-500 leading-relaxed font-medium`}\n`\n\nconst Data = styled.div`\n  ${tw`text-base md:text-lg text-gray-700 leading-normal`}\n`\n\nexport const REFRESH_RATE = 1000\n\nconst Index: React.FC = () => {\n  const { t } = useTranslation()\n  const profile = useProfile()\n  const { data: traffic, error: trafficError } = useSWR(\n    profile !== undefined ? '/traffic' : null,\n    (url) =>\n      fetcher<Traffic & { nowTime: number }>(url).then((res) => {\n        res.nowTime = Date.now()\n        return res\n      }),\n    {\n      revalidateOnFocus: false,\n      revalidateOnReconnect: false,\n      refreshInterval: REFRESH_RATE,\n      dedupingInterval: REFRESH_RATE,\n    },\n  )\n  const [trafficDatasets, setTrafficDatasets] = useState<{\n    up: Array<ChartPoint>\n    down: Array<ChartPoint>\n  }>({\n    up: [],\n    down: [],\n  })\n\n  const newDatasets = useMemo(() => {\n    return [\n      {\n        label: 'Upload',\n        data: trafficDatasets.up,\n      },\n      {\n        label: 'Download',\n        data: trafficDatasets.down,\n      },\n    ]\n  }, [t, trafficDatasets.down, trafficDatasets.up])\n\n  const activeInterface = useMemo(() => {\n    if (!traffic) return undefined\n\n    const aggregation: ConnectorTraffic = {\n      outCurrentSpeed: 0,\n      in: 0,\n      inCurrentSpeed: 0,\n      outMaxSpeed: 0,\n      out: 0,\n      inMaxSpeed: 0,\n    }\n\n    for (const name in traffic.interface) {\n      const conn = traffic.interface[name]\n      aggregation.in += conn.in\n      aggregation.out += conn.out\n      aggregation.outCurrentSpeed += conn.outCurrentSpeed\n      aggregation.inCurrentSpeed += conn.inCurrentSpeed\n    }\n\n    return aggregation\n  }, [traffic])\n\n  // Build datasets for chart\n  useEffect(() => {\n    if (!activeInterface) return undefined\n\n    setTrafficDatasets(() => {\n      const time = new Date()\n      const newUps = [{ x: time, y: activeInterface.outCurrentSpeed }]\n      const newDowns = [{ x: time, y: activeInterface.inCurrentSpeed }]\n\n      return {\n        up: newUps,\n        down: newDowns,\n      }\n    })\n  }, [activeInterface])\n\n  return (\n    <div>\n      <div tw=\"mb-3 w-full overflow-hidden\">\n        <LineChart id=\"traffic-chart\" newDatasets={newDatasets} />\n      </div>\n\n      {activeInterface ? (\n        <div tw=\"grid grid-cols-3 gap-4 divide-x divide-gray-200 border-solid border border-gray-200 bg-gray-100\">\n          <Cell>\n            <Title>{t('traffic_cell.upload')}</Title>\n            <Data>{bytes(activeInterface.outCurrentSpeed)}/s</Data>\n          </Cell>\n          <Cell>\n            <Title>{t('traffic_cell.download')}</Title>\n            <Data>{bytes(activeInterface.inCurrentSpeed)}/s</Data>\n          </Cell>\n          <Cell>\n            <Title>{t('traffic_cell.total')}</Title>\n            <Data>{bytes(activeInterface.in + activeInterface.out)}</Data>\n          </Cell>\n        </div>\n      ) : (\n        <div\n          css={[\n            tw`border border-gray-200 bg-gray-100 text-gray-700`,\n            css`\n              height: 67px;\n              line-height: 67px;\n              text-align: center;\n            `,\n          ]}\n        >\n          {t('common.is_loading')}...\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Index\n","var map = {\n\t\"./en/translation.json\": [\n\t\t238,\n\t\t23\n\t],\n\t\"./zh/translation.json\": [\n\t\t239,\n\t\t24\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 235;\nmodule.exports = webpackAsyncContext;","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport React from 'react'\nimport styled from '@emotion/styled/macro'\nimport { Spinner } from '@sumup/circuit-ui'\nimport tw from 'twin.macro'\n\nconst FullLoadingWrapper = styled.div`\n  ${tw`fixed top-0 right-0 bottom-0 left-0 flex items-center justify-center`}\n`\n\nconst FullLoading: React.FC = () => {\n  return (\n    <FullLoadingWrapper>\n      <Spinner />\n    </FullLoadingWrapper>\n  )\n}\n\nexport default FullLoading\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport React, { useEffect, useState } from 'react'\nimport {\n  Button,\n  ButtonGroup,\n  Modal,\n  ModalFooter,\n  ModalHeader,\n  ModalWrapper,\n} from '@sumup/circuit-ui'\nimport styled from '@emotion/styled/macro'\nimport css from '@emotion/css/macro'\nimport { useTranslation } from 'react-i18next'\nimport tw from 'twin.macro'\nimport store from 'store2'\nimport satisfies from 'semver/functions/satisfies'\n\nimport { LastUsedVersion } from '../utils/constant'\n\nconst currentVersion = process.env.REACT_APP_VERSION as string\n\nconst NewVersionAlert: React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [versionUrl, setVersionUrl] = useState<string>()\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    const lastUsedVersion = store.get(LastUsedVersion)\n\n    if (lastUsedVersion && !satisfies(currentVersion, `~${lastUsedVersion}`)) {\n      setVersionUrl(\n        `https://github.com/geekdada/yasd/releases/tag/v${currentVersion}`,\n      )\n      setIsOpen(true)\n    }\n\n    store.set(LastUsedVersion, currentVersion)\n  }, [])\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={() => {\n        setIsOpen(false)\n      }}\n    >\n      {({ onClose }) => (\n        <ModalWrapper>\n          <ModalHeader title={t('new_version_alert.title')} onClose={onClose} />\n          <div tw=\"mb-3\">{t('new_version_alert.message')}</div>\n          <ModalFooter align=\"right\">\n            <ButtonGroup>\n              <a href={versionUrl} target=\"_blank\" rel=\"noreferrer\">\n                <Button variant=\"primary\" onClick={onClose}>\n                  {t('common.see')}\n                </Button>\n              </a>\n            </ButtonGroup>\n          </ModalFooter>\n        </ModalWrapper>\n      )}\n    </Modal>\n  )\n}\n\nexport default NewVersionAlert\n","import { useModal } from '@sumup/circuit-ui'\nimport React, { useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nfunction useScrollMemory(): void {\n  const history = useHistory<{ scroll: number } | undefined>()\n\n  useEffect(() => {\n    const { push, replace } = history\n\n    // Override the history PUSH method to automatically set scroll state.\n    history.push = (path: string) => {\n      push(path, { scroll: window.scrollY })\n    }\n    // Override the history REPLACE method to automatically set scroll state.\n    history.replace = (path: string) => {\n      replace(path, { scroll: window.scrollY })\n    }\n\n    // Listen for location changes and set the scroll position accordingly.\n    // @ts-ignore\n    const unregister = history.listen((location, action) => {\n      window.scrollTo(0, action !== 'POP' ? 0 : location.state?.scroll ?? 0)\n    })\n\n    // Unregister listener when component unmounts.\n    return () => {\n      unregister()\n    }\n  }, [history])\n}\n\nconst ScrollToTop: React.FC = () => {\n  const { pathname } = useLocation()\n  const { isModalOpen, removeModal } = useModal()\n  useScrollMemory()\n\n  useEffect(\n    () => {\n      if (isModalOpen) {\n        removeModal()\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [pathname],\n  )\n\n  return <></>\n}\n\nexport default ScrollToTop\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport React, { KeyboardEvent, MouseEvent } from 'react'\nimport {\n  Button,\n  ButtonGroup,\n  Modal,\n  ModalFooter,\n  ModalHeader,\n  ModalWrapper,\n} from '@sumup/circuit-ui'\nimport styled from '@emotion/styled/macro'\nimport css from '@emotion/css/macro'\nimport { useTranslation } from 'react-i18next'\nimport tw from 'twin.macro'\n\ninterface NetworkErrorModalProps {\n  onClose: (event?: MouseEvent | KeyboardEvent) => void\n  isOpen: boolean\n  reloadButton?: boolean\n}\n\nconst NetworkErrorModal: React.FC<NetworkErrorModalProps> = ({\n  isOpen,\n  onClose,\n  reloadButton,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      {({ onClose }) => (\n        <ModalWrapper>\n          <ModalHeader title={t('common.network_error_title')} />\n          <div tw=\"mb-3\">{t('common.network_error_message')}</div>\n          <ModalFooter align=\"right\">\n            <ButtonGroup>\n              {reloadButton ? (\n                <Button\n                  onClick={() => {\n                    window.location.reload()\n                  }}\n                >\n                  {t('common.reload_window_retry')}\n                </Button>\n              ) : (\n                <React.Fragment></React.Fragment>\n              )}\n              <Button onClick={onClose} variant=\"primary\">\n                {t('common.exit')}\n              </Button>\n            </ButtonGroup>\n          </ModalFooter>\n        </ModalWrapper>\n      )}\n    </Modal>\n  )\n}\n\nexport default NetworkErrorModal\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { Select } from '@sumup/circuit-ui'\nimport { ChangeEventHandler, useCallback, useEffect, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport store from 'store2'\nimport tw from 'twin.macro'\nimport css from '@emotion/css/macro'\n\nimport { LastUsedLanguage } from '../utils/constant'\n\nconst ChangeLanguage = (): JSX.Element => {\n  const { i18n } = useTranslation()\n  const options = [\n    {\n      value: 'en',\n      label: 'English',\n    },\n    {\n      value: 'zh',\n      label: '中文',\n    },\n  ]\n  const [isLoading, setIsLoading] = useState(false)\n\n  const onChange: ChangeEventHandler<HTMLSelectElement> = useCallback(\n    (e) => {\n      setIsLoading(true)\n      store.set(LastUsedLanguage, e.target.value)\n      i18n.changeLanguage(e.target.value).finally(() => setIsLoading(false))\n    },\n    [i18n],\n  )\n\n  return (\n    <div tw=\"flex justify-center w-full\">\n      <Select\n        label=\"change language\"\n        hideLabel\n        noMargin\n        value={i18n.language}\n        options={options}\n        onChange={onChange}\n        disabled={isLoading}\n      />\n    </div>\n  )\n}\n\nexport default ChangeLanguage\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport axios from 'axios'\nimport React, { MouseEventHandler, useEffect, useState } from 'react'\nimport styled from '@emotion/styled/macro'\nimport css from '@emotion/css/macro'\nimport tw from 'twin.macro'\nimport { Bin, PaperPlane } from '@sumup/icons'\nimport { IconButton } from '@sumup/circuit-ui'\n\nimport { Profile } from '../../types'\n\ninterface ProfileCellProps {\n  profile: Profile\n  checkConnectivity?: boolean\n  onClick?: MouseEventHandler\n  showDelete?: boolean\n  onDelete?: MouseEventHandler\n  variant?: 'spread' | 'left'\n}\n\nconst ProfileCell: React.FC<ProfileCellProps> = ({\n  profile,\n  checkConnectivity,\n  onClick,\n  showDelete,\n  onDelete,\n  variant = 'spread',\n}) => {\n  const [available, setAvailable] = useState<boolean | undefined>(undefined)\n  const variantStyle =\n    variant === 'spread'\n      ? tw`flex-row justify-between items-center`\n      : tw`flex-col justify-start items-start`\n\n  const clickHandler: MouseEventHandler = (e) => {\n    e.stopPropagation()\n    e.preventDefault()\n\n    if (available && onClick) {\n      onClick(e)\n    }\n  }\n\n  const deleteHandler: MouseEventHandler = (e) => {\n    e.stopPropagation()\n    e.preventDefault()\n\n    if (onDelete) {\n      onDelete(e)\n    }\n  }\n\n  const getCursorStyle = () => {\n    if (onClick) {\n      if (available) {\n        return tw`cursor-pointer`\n      }\n      return tw`cursor-not-allowed`\n    }\n    return null\n  }\n\n  useEffect(() => {\n    let isMounted = true\n\n    if (checkConnectivity) {\n      axios\n        .request({\n          url: `${profile.tls ? 'https' : 'http'}://${profile.host}:${\n            profile.port\n          }/v1/outbound`,\n          method: 'GET',\n          headers: {\n            'x-key': profile.key,\n          },\n          timeout: 3000,\n        })\n        .then(() => {\n          if (isMounted) setAvailable(true)\n        })\n        .catch(() => {\n          if (isMounted) setAvailable(false)\n        })\n    }\n\n    return () => {\n      isMounted = false\n    }\n  }, [profile, checkConnectivity])\n\n  return (\n    <div\n      key={profile.id}\n      css={[getCursorStyle(), tw`flex p-3 justify-between`]}\n      onClick={clickHandler}\n    >\n      <div css={[tw`flex w-full`, variantStyle]}>\n        <div tw=\"truncate text-sm md:text-base leading-tight\">\n          {profile.name}\n        </div>\n        <div css={[tw`flex items-center`, variant === 'left' && tw`mt-2`]}>\n          {checkConnectivity && (\n            <div tw=\"relative flex h-3 w-3 mr-3\">\n              {available && (\n                <span tw=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-green-400 opacity-75\" />\n              )}\n              <span\n                css={[\n                  tw`relative inline-flex rounded-full h-3 w-3`,\n                  available === undefined && tw`bg-gray-500`,\n                  available === true && tw`bg-green-500`,\n                  available === false && tw`bg-red-500`,\n                ]}\n              />\n            </div>\n          )}\n          <div tw=\"flex items-center font-mono text-gray-600 text-xs md:text-sm truncate leading-none\">\n            <span>\n              {profile.host}:{profile.port}\n            </span>\n          </div>\n        </div>\n      </div>\n      {showDelete && (\n        <div tw=\"flex items-center ml-2\">\n          <IconButton\n            onClick={deleteHandler}\n            label={'delete profile'}\n            css={[\n              tw`flex items-center justify-center w-8 h-8 text-gray-600`,\n              css`\n                padding: 0;\n\n                svg {\n                  ${tw`transition-colors duration-200 ease-in-out w-4 h-4`}\n                }\n                &:hover svg {\n                  ${tw`text-gray-700`}\n                }\n              `,\n            ]}\n          >\n            <Bin />\n          </IconButton>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ProfileCell\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport React, { useEffect, useRef, useState } from 'react'\nimport tw from 'twin.macro'\nimport ReactGA from 'react-ga'\nimport axios from 'axios'\nimport { isRunInSurge } from '../utils'\n\ninterface AdData {\n  id: number\n  name: string\n  url: string\n  image?: string\n}\n\nconst Ad: React.FC = () => {\n  const showDynamicAd = useRef(!!process.env.REACT_APP_SHOW_AD)\n  const [ad, setAd] = useState<AdData>()\n\n  useEffect(() => {\n    let isMounted = true\n\n    if (isRunInSurge()) {\n      return\n    }\n\n    if (showDynamicAd.current) {\n      axios\n        .get<{ list: Array<AdData> }>(\n          'https://cdn.jsdelivr.net/gh/geekdada/ad-json/ad.json',\n          {\n            timeout: 3000,\n          },\n        )\n        .then(({ data }) => {\n          const { list } = data\n          const adList = list.filter((item) => item.id === 20201013)\n\n          if (adList.length) {\n            isMounted && setAd(adList[0])\n          } else {\n            throw new Error('Target ad not found')\n          }\n        })\n        .catch(() => {\n          isMounted &&\n            setAd({\n              id: 1,\n              name: '请我喝咖啡！',\n              url: 'https://surgio.royli.dev/support.html',\n            })\n        })\n    } else {\n      isMounted &&\n        setAd({\n          id: 1,\n          name: '请我喝咖啡！',\n          url: 'https://surgio.royli.dev/support.html',\n        })\n    }\n\n    return () => {\n      isMounted = false\n    }\n  }, [])\n\n  return (\n    <React.Fragment>\n      {ad && (\n        <ReactGA.OutboundLink\n          eventLabel={`IndexAd_${ad.name}`}\n          to={ad.url}\n          target=\"_blank\"\n        >\n          <div tw=\"bg-blue-100 border border-blue-500 rounded text-blue-700 px-4 py-3 flex items-center\">\n            {showDynamicAd.current && (\n              <span tw=\"flex rounded-full bg-indigo-500 uppercase px-2 py-1 text-xs font-bold text-white mr-3\">\n                AD\n              </span>\n            )}\n\n            <span>{ad.name}</span>\n          </div>\n        </ReactGA.OutboundLink>\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default Ad\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { Heading } from '@sumup/circuit-ui'\nimport React from 'react'\nimport tw from 'twin.macro'\n\nexport default function Header(): JSX.Element {\n  return (\n    <Heading\n      size={'tera'}\n      noMargin\n      tw=\"sticky top-0 flex shadow bg-white z-10 px-3 py-3 mb-4\"\n    >\n      Surge Web Dashboard\n      <small tw=\"text-xs font-normal font-mono text-gray-600 ml-3\">\n        {`v${process.env.REACT_APP_VERSION}`}\n      </small>\n    </Heading>\n  )\n}\n","import { useState } from 'react'\n\ninterface AuthData {\n  name: string\n  host: string\n  port: string\n  key: string\n  useTls: boolean\n}\n\nexport function useAuthData() {\n  const protocol = window.location.protocol\n  const data = useState<AuthData>(() => ({\n    name: '',\n    host: '',\n    port: '',\n    key: '',\n    useTls: protocol === 'https:',\n  }))\n  const [hasError, setHasError] = useState<boolean | string>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [keepCredential, setKeepCredential] = useState(false)\n\n  return {\n    data: data[0],\n    setData: data[1],\n    hasError,\n    setHasError,\n    isLoading,\n    setIsLoading,\n    keepCredential,\n    setKeepCredential,\n  }\n}\n","import axios from 'axios'\n\nexport async function tryHost(\n  protocol: string,\n  hostname: string,\n  port: string | number,\n  key: string,\n): Promise<{\n  name?: string\n  platform: 'macos' | 'ios'\n  platformVersion: string\n  platformBuild: string\n}> {\n  const basicInfoReq = axios.request({\n    url: `${protocol}//${hostname}:${port}/v1/outbound`,\n    method: 'GET',\n    timeout: 3000,\n    headers: {\n      'x-key': key,\n    },\n    responseType: 'json',\n  })\n  const environmentReq = axios\n    .request<{ deviceName: string }>({\n      url: `${protocol}//${hostname}:${port}/v1/environment`,\n      method: 'GET',\n      timeout: 3000,\n      headers: {\n        'x-key': key,\n      },\n      responseType: 'json',\n    })\n    .then((res) => res.data)\n    .catch(() => undefined)\n  const [basicInfo, environment] = await Promise.all([\n    basicInfoReq,\n    environmentReq,\n  ])\n\n  return {\n    name: environment ? environment.deviceName : undefined,\n    platform: basicInfo.headers['x-system']?.includes('macOS')\n      ? 'macos'\n      : 'ios',\n    platformVersion: basicInfo.headers['x-surge-version'] || '',\n    platformBuild: basicInfo.headers['x-surge-build'] || '',\n  }\n}\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport React, { useCallback, useEffect } from 'react'\nimport { Heading, Input, LoadingButton, Checkbox } from '@sumup/circuit-ui'\nimport css from '@emotion/css/macro'\nimport { Controller, useForm } from 'react-hook-form'\nimport tw from 'twin.macro'\nimport store from 'store2'\nimport { v4 as uuid } from 'uuid'\nimport { find } from 'lodash-es'\nimport { useHistory } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\nimport ChangeLanguage from '../../components/ChangeLanguage'\nimport ProfileCell from '../../components/ProfileCell'\nimport Ad from '../../components/Ad'\nimport { useSetState } from '../../hooks'\nimport { useProfileDispatch } from '../../models/profile'\nimport { Profile } from '../../types'\nimport { ExistingProfiles, LastUsedProfile } from '../../utils/constant'\nimport { getValidationHint } from '../../utils/validation'\nimport Header from './components/Header'\nimport { useAuthData } from './hooks'\nimport { RegularFormFields } from './types'\nimport { tryHost } from './utils'\n\nconst Page: React.FC = () => {\n  const history = useHistory()\n  const protocol = window.location.protocol\n  const { isLoading, setIsLoading } = useAuthData()\n  const [existingProfiles, setExistingProfiles, getExistingProfiles] =\n    useSetState<Array<Profile>>([])\n  const profileDispatch = useProfileDispatch()\n  const { t } = useTranslation()\n  const {\n    getValues,\n    register,\n    handleSubmit,\n    control,\n    clearErrors,\n    setError,\n    reset,\n    formState: { errors },\n  } = useForm<RegularFormFields>({\n    defaultValues: {\n      keepCredential: false,\n      useTls: window.location.protocol === 'https:',\n    },\n  })\n\n  const addProfile = (config: Omit<Profile, 'id'>): Profile => {\n    const profile: Profile = {\n      ...config,\n      id: uuid(),\n    }\n    const newProfiles = [profile, ...existingProfiles]\n    setExistingProfiles(newProfiles)\n\n    if (getValues('keepCredential')) {\n      store.set(ExistingProfiles, newProfiles)\n      store.set(LastUsedProfile, profile.id)\n    }\n\n    return profile\n  }\n\n  const selectProfile = (id: string) => {\n    getExistingProfiles().then((profiles) => {\n      const profile = find(profiles, { id })\n\n      if (profile) {\n        if (getValues('keepCredential')) {\n          store.set(LastUsedProfile, profile.id)\n        }\n\n        profileDispatch({\n          type: 'update',\n          payload: profile,\n        })\n        history.replace('/home')\n      }\n    })\n  }\n\n  const deleteProfile = (id: string) => {\n    const profiles = existingProfiles.filter((item) => item.id !== id)\n\n    setExistingProfiles(profiles)\n    store.set(ExistingProfiles, profiles)\n  }\n\n  const onSubmit = (data: RegularFormFields) => {\n    if (!data.name || !data.host || !data.port || !data.key) {\n      return\n    }\n\n    setIsLoading(true)\n\n    tryHost(data.useTls ? 'https:' : 'http:', data.host, data.port, data.key)\n      .then((res) => {\n        clearErrors()\n\n        const newProfile = addProfile({\n          name: data.name,\n          host: data.host,\n          port: Number(data.port),\n          key: data.key,\n          platform: res.platform,\n          platformVersion: res.platformVersion,\n          platformBuild: res.platformBuild,\n          tls: data.useTls,\n        })\n\n        reset()\n        setIsLoading(false)\n        selectProfile(newProfile.id)\n      })\n      .catch((err) => {\n        setError('key', {\n          type: 'invalid',\n          message: err.message,\n        })\n        setError('host', {\n          type: 'invalid',\n        })\n        setError('port', {\n          type: 'invalid',\n        })\n        console.error(err)\n        setIsLoading(false)\n      })\n  }\n\n  useEffect(() => {\n    const storedExistingProfiles = store.get(ExistingProfiles)\n\n    if (storedExistingProfiles) {\n      setExistingProfiles(storedExistingProfiles)\n    }\n  }, [setExistingProfiles])\n\n  return (\n    <div\n      css={css`\n        padding-bottom: calc(env(safe-area-inset-bottom) + 1.25rem);\n      `}\n    >\n      <Header />\n\n      <div tw=\"max-w-xs sm:max-w-sm md:max-w-md mx-auto\">\n        <Heading size={'tera'}>{t('landing.add_new_host')}</Heading>\n\n        <div tw=\"bg-teal-100 border-t-4 border-teal-500 rounded-b text-teal-900 text-sm px-4 py-3 mb-4 shadow-md\">\n          <p tw=\"leading-normal mb-2\">\n            该功能仅 Surge iOS 4.4.0 和 Surge Mac 4.0.0 以上版本支持。\n          </p>\n          <p tw=\"leading-normal mb-4\">\n            <a\n              href=\"https://manual.nssurge.com/others/http-api.html#configuration\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              tw=\"border-b border-solid border-teal-500\"\n            >\n              🔗 开启方式\n            </a>\n          </p>\n          <p tw=\"leading-normal mb-2\">\n            Surge Mac v4.0.6 (1280) 开始已支持开启 HTTPS API，故不再支持使用\n            yasd-helper。\n          </p>\n        </div>\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Input\n            type=\"text\"\n            invalid={!!errors?.name}\n            validationHint={getValidationHint(\n              {\n                required: t('devices.err_required'),\n              },\n              errors?.name,\n            )}\n            label={t('landing.name')}\n            placeholder=\"Mac\"\n            {...register('name', { required: true })}\n          />\n          <Input\n            type=\"text\"\n            invalid={!!errors?.host}\n            label={t('landing.host')}\n            placeholder=\"127.0.0.1\"\n            validationHint={t('landing.host_tips')}\n            {...register('host', { required: true })}\n          />\n          <Input\n            type=\"number\"\n            invalid={!!errors?.port}\n            label={t('landing.port')}\n            placeholder=\"6171\"\n            validationHint={getValidationHint(\n              {\n                required: t('devices.err_required'),\n              },\n              errors?.port,\n            )}\n            {...register('port', { required: true })}\n          />\n          <Input\n            type=\"password\"\n            invalid={!!errors?.key}\n            validationHint={getValidationHint(\n              {\n                required: t('devices.err_required'),\n              },\n              errors?.key,\n            )}\n            label={t('landing.key')}\n            placeholder=\"examplekey\"\n            {...register('key', { required: true })}\n          />\n\n          <div>\n            <Controller\n              name=\"useTls\"\n              control={control}\n              render={({ field }) => (\n                <Checkbox\n                  disabled={protocol === 'https:'}\n                  checked={field.value}\n                  onChange={field.onChange}\n                >\n                  {t('landing.https')}\n                </Checkbox>\n              )}\n            />\n            <Controller\n              name=\"keepCredential\"\n              control={control}\n              render={({ field }) => (\n                <Checkbox checked={field.value} onChange={field.onChange}>\n                  {t('landing.remember_me')}\n                </Checkbox>\n              )}\n            />\n          </div>\n\n          <div tw=\"mt-6\">\n            <LoadingButton\n              type=\"submit\"\n              variant=\"primary\"\n              stretch\n              isLoading={isLoading}\n              loadingLabel={t('landing.is_loading')}\n            >\n              {t('landing.confirm')}\n            </LoadingButton>\n          </div>\n        </form>\n      </div>\n\n      {existingProfiles.length > 0 && (\n        <div tw=\"max-w-xs sm:max-w-sm md:max-w-md mx-auto mt-10\">\n          <Heading size={'mega'}>{t('landing.history')}</Heading>\n\n          <div tw=\"bg-gray-100 divide-y divide-gray-200 rounded overflow-hidden\">\n            {existingProfiles.map((profile) => {\n              return (\n                <div key={profile.id} tw=\"hover:bg-gray-200\">\n                  <ProfileCell\n                    profile={profile}\n                    variant=\"left\"\n                    checkConnectivity\n                    showDelete\n                    onClick={() => selectProfile(profile.id)}\n                    onDelete={() => deleteProfile(profile.id)}\n                  />\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      )}\n\n      <div tw=\"max-w-xs sm:max-w-sm md:max-w-md mx-auto mt-10\">\n        <Ad />\n      </div>\n\n      <div tw=\"mt-10\">\n        <ChangeLanguage />\n      </div>\n    </div>\n  )\n}\n\nexport default Page\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport React, { useEffect } from 'react'\nimport { Heading, Input, LoadingButton, Checkbox } from '@sumup/circuit-ui'\nimport css from '@emotion/css/macro'\nimport { useForm, Controller } from 'react-hook-form'\nimport { useTranslation } from 'react-i18next'\nimport tw from 'twin.macro'\nimport store from 'store2'\nimport { v4 as uuid } from 'uuid'\nimport { find } from 'lodash-es'\nimport { useHistory } from 'react-router-dom'\n\nimport ChangeLanguage from '../../components/ChangeLanguage'\nimport { useSetState } from '../../hooks'\nimport { useProfile, useProfileDispatch } from '../../models/profile'\nimport { Profile } from '../../types'\nimport { ExistingProfiles, LastUsedProfile } from '../../utils/constant'\nimport { getValidationHint } from '../../utils/validation'\nimport Header from './components/Header'\nimport { useAuthData } from './hooks'\nimport { SurgeFormFields } from './types'\nimport { tryHost } from './utils'\n\nconst Page: React.FC = () => {\n  const { t } = useTranslation()\n  const { isLoading, setIsLoading } = useAuthData()\n  const [existingProfiles, setExistingProfiles, getExistingProfiles] =\n    useSetState<Array<Profile>>([])\n  const profileDispatch = useProfileDispatch()\n  const profile = useProfile()\n  const history = useHistory()\n  const {\n    getValues,\n    register,\n    handleSubmit,\n    control,\n    clearErrors,\n    setError,\n    formState: { errors },\n  } = useForm<SurgeFormFields>({\n    defaultValues: {\n      keepCredential: false,\n    },\n  })\n\n  const addProfile = (config: Omit<Profile, 'id'>): Profile => {\n    const profile: Profile = {\n      ...config,\n      id: uuid(),\n    }\n    const newProfiles = [profile, ...existingProfiles]\n    setExistingProfiles(newProfiles)\n\n    if (getValues('keepCredential')) {\n      store.set(ExistingProfiles, newProfiles)\n      store.set(LastUsedProfile, profile.id)\n    }\n\n    return profile\n  }\n\n  const selectProfile = (id: string) => {\n    getExistingProfiles().then((profiles) => {\n      const profile = find(profiles, { id })\n\n      if (profile) {\n        if (getValues('keepCredential')) {\n          store.set(LastUsedProfile, profile.id)\n        }\n\n        profileDispatch({\n          type: 'update',\n          payload: profile,\n        })\n      }\n    })\n  }\n\n  const getHost: () => {\n    protocol: string\n    hostname: string\n    port: string\n  } = () => {\n    const protocol = window.location.protocol\n\n    if (process.env.NODE_ENV === 'production') {\n      return {\n        protocol,\n        hostname: window.location.hostname,\n        port: window.location.port,\n      }\n    }\n    return {\n      protocol: process.env.REACT_APP_PROTOCOL as string,\n      hostname: process.env.REACT_APP_HOST as string,\n      port: process.env.REACT_APP_PORT as string,\n    }\n  }\n\n  const onSubmit = (data: SurgeFormFields) => {\n    if (!data.key) {\n      return\n    }\n\n    const { hostname, port, protocol } = getHost()\n    setIsLoading(true)\n\n    tryHost(protocol, hostname, port, data.key)\n      .then((res) => {\n        clearErrors()\n\n        const newProfile = addProfile({\n          name: res.name || 'Surge for Mac',\n          host: hostname,\n          port: Number(port),\n          key: data.key,\n          platform: res.platform,\n          platformVersion: res.platformVersion,\n          platformBuild: res.platformBuild,\n          tls: protocol === 'https:',\n        })\n\n        setIsLoading(false)\n        selectProfile(newProfile.id)\n      })\n      .catch((err) => {\n        setError('key', {\n          type: 'invalid',\n          message: err.message,\n        })\n        console.error(err)\n        setIsLoading(false)\n      })\n  }\n\n  useEffect(() => {\n    const storedExistingProfiles = store.get(ExistingProfiles)\n    const lastId = store.get(LastUsedProfile)\n\n    if (storedExistingProfiles) {\n      const result = find<Profile>(storedExistingProfiles, { id: lastId })\n\n      setExistingProfiles(storedExistingProfiles)\n\n      if (result) {\n        profileDispatch({\n          type: 'update',\n          payload: result,\n        })\n      }\n    }\n  }, [profileDispatch, setExistingProfiles])\n\n  useEffect(() => {\n    if (profile) {\n      history.replace('/home')\n    }\n  }, [profile, history])\n\n  return (\n    <div\n      css={css`\n        padding-bottom: calc(env(safe-area-inset-bottom) + 1.25rem);\n      `}\n    >\n      <Header />\n\n      <div tw=\"max-w-xs sm:max-w-sm md:max-w-md mx-auto\">\n        <Heading size={'tera'}>{t('landing.login')}</Heading>\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Input\n            type=\"password\"\n            invalid={!!errors?.key}\n            validationHint={getValidationHint(\n              {\n                required: t('devices.err_required'),\n              },\n              errors?.key,\n            )}\n            label={t('landing.key')}\n            placeholder=\"examplekey\"\n            {...register('key', { required: true })}\n          />\n\n          <div>\n            <Controller\n              name=\"keepCredential\"\n              control={control}\n              render={({ field }) => (\n                <Checkbox checked={field.value} onChange={field.onChange}>\n                  {t('landing.remember_me')}\n                </Checkbox>\n              )}\n            />\n          </div>\n\n          <div tw=\"mt-6\">\n            <LoadingButton\n              type=\"submit\"\n              variant=\"primary\"\n              stretch\n              isLoading={isLoading}\n              loadingLabel={t('landing.is_loading')}\n            >\n              {t('landing.confirm')}\n            </LoadingButton>\n          </div>\n        </form>\n      </div>\n\n      <div tw=\"mt-10\">\n        <ChangeLanguage />\n      </div>\n    </div>\n  )\n}\n\nexport default Page\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport React from 'react'\nimport tw from 'twin.macro'\nimport css from '@emotion/css/macro'\n\nimport ProfileCell from '../../../components/ProfileCell'\nimport { useProfile } from '../../../models/profile'\n\nconst HostInfo = (): JSX.Element => {\n  const profile = useProfile()\n\n  return (\n    <div tw=\"bg-gray-100 rounded-lg\">\n      {profile && <ProfileCell variant=\"left\" profile={profile} />}\n    </div>\n  )\n}\n\nexport default HostInfo\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled/macro'\nimport css from '@emotion/css/macro'\nimport dayjs from 'dayjs'\nimport localizedFormat from 'dayjs/plugin/localizedFormat'\nimport { useTranslation } from 'react-i18next'\nimport useSWR from 'swr'\nimport tw from 'twin.macro'\nimport React from 'react'\n\nimport { useProfile } from '../../../models/profile'\nimport { EventList } from '../../../types'\nimport fetcher from '../../../utils/fetcher'\n\ndayjs.extend(localizedFormat)\n\nconst Events: React.FC = () => {\n  const { t } = useTranslation()\n  const profile = useProfile()\n  const { data: events } = useSWR<EventList>(\n    profile !== undefined ? '/events' : null,\n    fetcher,\n  )\n\n  return (\n    <div tw=\"p-3 bg-gray-100 rounded\">\n      <div tw=\"text-base font-medium text-gray-700\">{t('home.events')}</div>\n      <div tw=\"divide-y divide-gray-200 mt-1\">\n        {events &&\n          events.events.slice(0, 8).map((item) => {\n            return (\n              <div key={item.identifier} tw=\"py-1\">\n                <div\n                  tw=\"text-sm leading-normal text-gray-600\"\n                  css={css`\n                    word-break: break-word;\n                    overflow-wrap: break-word;\n                  `}\n                >\n                  {item.content}\n                </div>\n                <div tw=\"text-xs text-gray-500 mt-1\">\n                  {item.type === 2 && (\n                    <span\n                      css={[\n                        tw`bg-red-400 text-white rounded mr-1`,\n                        css`\n                          font-size: 0.6rem;\n                          padding: 0.1rem 0.5rem;\n                        `,\n                      ]}\n                    >\n                      ERROR\n                    </span>\n                  )}\n                  <span>{dayjs(item.date).format('L LTS')}</span>\n                </div>\n              </div>\n            )\n          })}\n      </div>\n    </div>\n  )\n}\n\nexport default Events\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled/macro'\nimport css from '@emotion/css/macro'\nimport { Card, Heading } from '@sumup/circuit-ui'\nimport tw from 'twin.macro'\nimport React, { MouseEventHandler } from 'react'\n\ninterface MenuTileProps {\n  onClick?: MouseEventHandler\n  link?: string\n}\n\nconst MenuTile: React.FC<MenuTileProps> = (props) => {\n  const handleClick: MouseEventHandler = (e) => {\n    if (props.onClick) {\n      props.onClick(e)\n    }\n  }\n\n  return (\n    <div\n      onClick={handleClick}\n      css={[\n        props.onClick &&\n          tw`cursor-pointer transform transition-transform duration-100 active:scale-95`,\n      ]}\n    >\n      <Card\n        css={[\n          css`\n            user-select: none;\n            min-height: 8rem;\n          `,\n          tw`p-4 border-none shadow-sm bg-gray-100 transition-colors duration-150 ease-in-out`,\n          props.onClick && tw`hover:bg-gray-200 active:bg-gray-200`,\n        ]}\n      >\n        {props.children}\n      </Card>\n    </div>\n  )\n}\n\nexport const MenuTileContent = styled.div``\n\nexport const MenuTileTitle: React.FC<{ title: string }> = ({ title }) => {\n  return (\n    <Heading size={'mega'} noMargin tw=\"text-gray-800\">\n      {title}\n    </Heading>\n  )\n}\n\nexport default MenuTile\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { Laptop } from '@sumup/icons'\nimport { find } from 'lodash-es'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport styled from '@emotion/styled/macro'\nimport css from '@emotion/css/macro'\nimport { useTranslation } from 'react-i18next'\nimport tw from 'twin.macro'\nimport store from 'store2'\nimport { useHistory } from 'react-router-dom'\nimport {\n  useModal,\n  ModalWrapper,\n  ModalHeader,\n  IconButton,\n  Badge,\n  Button,\n} from '@sumup/circuit-ui'\nimport ProfileCell from '../../../components/ProfileCell'\nimport { useProfile } from '../../../models/profile'\n\nimport { Profile } from '../../../types'\nimport { ExistingProfiles, LastUsedProfile } from '../../../utils/constant'\n\nconst SetHostModal: React.FC = () => {\n  const { t } = useTranslation()\n  const [existingProfiles, setExistingProfiles] = useState<Array<Profile>>([])\n  const { setModal } = useModal()\n  const currentProfile = useProfile()\n  const history = useHistory()\n\n  const selectProfile = useCallback(\n    (id: string) => {\n      const profile = find(existingProfiles, { id })\n\n      if (profile) {\n        store.set(LastUsedProfile, profile.id)\n        window.location.reload()\n      }\n    },\n    [existingProfiles],\n  )\n\n  useEffect(() => {\n    const storedExistingProfiles = store.get(ExistingProfiles)\n\n    if (storedExistingProfiles) {\n      setExistingProfiles(storedExistingProfiles)\n    }\n  }, [])\n\n  const showModal = () => {\n    setModal({\n      // eslint-disable-next-line react/display-name\n      children: ({ onClose }) => {\n        return (\n          <ModalWrapper>\n            <ModalHeader title={t('landing.history')} onClose={onClose} />\n\n            <div tw=\"bg-gray-100 divide-y divide-gray-200 rounded overflow-hidden\">\n              {existingProfiles.map((profile) => {\n                return (\n                  <div\n                    key={profile.id}\n                    tw=\"flex flex-row items-center hover:bg-gray-200\"\n                  >\n                    {profile.id === currentProfile?.id && (\n                      <Badge variant=\"success\" tw=\"ml-3 text-xs md:text-sm\">\n                        {t('landing.current')}\n                      </Badge>\n                    )}\n                    <div tw=\"flex-1\">\n                      <ProfileCell\n                        profile={profile}\n                        checkConnectivity\n                        onClick={() => selectProfile(profile.id)}\n                      />\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n\n            <div tw=\"mt-4\">\n              <Button\n                size=\"kilo\"\n                variant=\"primary\"\n                onClick={() => history.replace('/')}\n              >\n                {t('landing.add_new_host')}\n              </Button>\n            </div>\n          </ModalWrapper>\n        )\n      },\n      onClose() {\n        // noop\n      },\n    })\n  }\n\n  return (\n    <IconButton label={'change host'} tw=\"w-10 h-10 p-1\" onClick={showModal}>\n      <Laptop />\n    </IconButton>\n  )\n}\n\nexport default SetHostModal\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport css from '@emotion/css/macro'\nimport { Toggle } from '@sumup/circuit-ui'\nimport { useTranslation } from 'react-i18next'\nimport { useHistory } from 'react-router-dom'\nimport useSWR, { mutate } from 'swr'\nimport tw from 'twin.macro'\nimport React, { ChangeEventHandler, useCallback } from 'react'\n\nimport { useProfile } from '../../../models/profile'\nimport { Capability } from '../../../types'\nimport fetcher from '../../../utils/fetcher'\nimport MenuTile, { MenuTileContent, MenuTileTitle } from './MenuTile'\n\ninterface CapabilityTileProps {\n  api: string\n  title: string\n  link?: string\n}\n\nconst CapabilityTile: React.FC<CapabilityTileProps> = ({\n  api,\n  title,\n  link,\n}) => {\n  const { t } = useTranslation()\n  const profile = useProfile()\n  const { data: capability } = useSWR<Capability>(\n    profile !== undefined ? api : null,\n    fetcher,\n  )\n  const history = useHistory()\n\n  const toggle: ChangeEventHandler<HTMLButtonElement> = useCallback(\n    (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n\n      fetcher({\n        method: 'POST',\n        url: api,\n        data: {\n          enabled: !capability?.enabled,\n        },\n      })\n        .then(() => {\n          return mutate(api)\n        })\n        .catch((err) => {\n          console.error(err)\n        })\n    },\n    [api, capability],\n  )\n\n  return (\n    <MenuTile onClick={link ? () => history.push(link) : undefined}>\n      <MenuTileTitle title={t(`home.${title}`)} />\n\n      <MenuTileContent css={[tw`flex justify-end`]}>\n        <Toggle\n          noMargin\n          label=\"\"\n          labelChecked={t('common.on')}\n          labelUnchecked={t('common.off')}\n          checked={capability?.enabled}\n          onChange={toggle}\n        />\n      </MenuTileContent>\n    </MenuTile>\n  )\n}\n\nexport default CapabilityTile\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport React from 'react'\nimport gte from 'semver/functions/gte'\n\nimport { Profile } from '../../types'\nimport { isRunInSurge } from '../../utils'\nimport CapabilityTile from './components/CapabilityTile'\n\nexport interface MenuItem {\n  title: string\n  subTitle?: string\n  link?: string\n  component?: JSX.Element\n  isEnabled?: (\n    platform: Profile['platform'] | void,\n    platformVersion: Profile['platformVersion'] | void,\n  ) => boolean\n}\n\nconst menu: Array<MenuItem> = [\n  {\n    title: 'policies',\n    link: '/policies',\n  },\n  {\n    title: 'requests',\n    link: '/requests',\n  },\n  {\n    title: 'traffic',\n    link: '/traffic',\n  },\n  {\n    title: 'scripting',\n    component: (\n      <CapabilityTile\n        api=\"/features/scripting\"\n        title=\"scripting\"\n        link=\"/scripting\"\n      />\n    ),\n  },\n  {\n    title: 'modules',\n    link: '/modules',\n  },\n  {\n    title: 'device_management',\n    link: '/devices',\n    isEnabled: (platform, platformVersion) => {\n      return Boolean(\n        platform === 'macos' &&\n          platformVersion &&\n          gte(platformVersion, '4.0.6'),\n      )\n    },\n  },\n  {\n    title: 'dns',\n    link: '/dns',\n  },\n  {\n    title: 'profile',\n    link: '/profiles/current',\n  },\n  {\n    title: 'mitm',\n    component: <CapabilityTile api=\"/features/mitm\" title=\"mitm\" />,\n  },\n  {\n    title: 'http_capture',\n    component: <CapabilityTile api=\"/features/capture\" title=\"http_capture\" />,\n  },\n  {\n    title: 'rewrite',\n    component: <CapabilityTile api=\"/features/rewrite\" title=\"rewrite\" />,\n  },\n]\n\nif (!isRunInSurge()) {\n  menu.push({\n    title: 'github',\n    subTitle: '🌟',\n    link: 'https://github.com/geekdada/yasd',\n  })\n}\n\nexport default menu\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport React, { useCallback } from 'react'\nimport { Button, Heading, Toggle } from '@sumup/circuit-ui'\nimport css from '@emotion/css/macro'\nimport { useTranslation } from 'react-i18next'\nimport tw from 'twin.macro'\nimport { delay } from 'bluebird'\nimport { useHistory } from 'react-router-dom'\nimport useSWR, { mutate } from 'swr'\nimport store from 'store2'\n\nimport ChangeLanguage from '../../components/ChangeLanguage'\nimport { DataGroup, DataRow, DataRowMain } from '../../components/Data'\nimport Ad from '../../components/Ad'\nimport VersionSupport from '../../components/VersionSupport'\nimport {\n  usePlatform,\n  usePlatformBuild,\n  usePlatformVersion,\n  useProfile,\n} from '../../models/profile'\nimport { Capability } from '../../types'\nimport { forceRefresh, isRunInSurge } from '../../utils'\nimport { ExistingProfiles, LastUsedProfile } from '../../utils/constant'\nimport fetcher from '../../utils/fetcher'\nimport HostInfo from './components/HostInfo'\nimport TrafficCell from './components/TrafficCell'\nimport Events from './components/Events'\nimport MenuTile, { MenuTileTitle } from './components/MenuTile'\nimport SetHostModal from './components/SetHostModal'\nimport menu from './menu'\n\nconst Page: React.FC = () => {\n  const history = useHistory()\n  const profile = useProfile()\n  const { data: systemProxy } = useSWR<Capability>(\n    profile?.platform === 'macos' ? '/features/system_proxy' : null,\n    fetcher,\n  )\n  const { data: enhancedMode } = useSWR<Capability>(\n    profile?.platform === 'macos' ? '/features/enhanced_mode' : null,\n    fetcher,\n  )\n  const { t } = useTranslation()\n  const platform = usePlatform()\n  const platformVersion = usePlatformVersion()\n  const platformBuild = usePlatformBuild()\n\n  const toggleSystemProxy = useCallback(() => {\n    fetcher({\n      method: 'POST',\n      url: '/features/system_proxy',\n      data: {\n        enabled: !systemProxy?.enabled,\n      },\n    })\n      .then(() => {\n        return delay(100).then(() => mutate('/features/system_proxy'))\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  }, [systemProxy])\n\n  const toggleEnhancedMode = useCallback(() => {\n    fetcher({\n      method: 'POST',\n      url: '/features/enhanced_mode',\n      data: {\n        enabled: !enhancedMode?.enabled,\n      },\n    })\n      .then(() => {\n        return delay(100).then(() => mutate('/features/enhanced_mode'))\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  }, [enhancedMode])\n\n  const logout = () => {\n    store.remove(LastUsedProfile)\n    store.remove(ExistingProfiles)\n    window.location.reload()\n  }\n\n  const openLink = (link?: string) => {\n    if (!link) return\n\n    if (link.startsWith('http')) {\n      window.open(link, '_blank', 'noopener noreferrer')\n    } else {\n      history.push(link)\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div\n        css={css`\n          padding-bottom: calc(env(safe-area-inset-bottom) + 1.25rem);\n        `}\n      >\n        <Heading\n          size={'tera'}\n          noMargin\n          tw=\"sticky top-0 flex shadow bg-white z-10 px-3 py-3 mb-4\"\n        >\n          {profile && (\n            <div tw=\"w-full flex justify-between items-center\">\n              <div tw=\"w-2/3\" onDoubleClick={forceRefresh}>\n                <HostInfo />\n              </div>\n\n              {isRunInSurge() ? (\n                <div>\n                  <Button size=\"kilo\" onClick={logout}>\n                    {t('home.logout')}\n                  </Button>\n                </div>\n              ) : (\n                <SetHostModal />\n              )}\n            </div>\n          )}\n        </Heading>\n\n        <div\n          css={css`\n            padding-left: env(safe-area-inset-left);\n            padding-right: env(safe-area-inset-right);\n          `}\n        >\n          <div tw=\"mb-4\">\n            <TrafficCell />\n          </div>\n\n          <VersionSupport macos=\"0.0.0\">\n            <DataGroup tw=\"mx-4\">\n              <DataRow>\n                <DataRowMain>\n                  <div tw=\"font-medium\">{t('home.system_proxy')}</div>\n                  <div>\n                    <Toggle\n                      noMargin\n                      label=\"\"\n                      labelChecked=\"\"\n                      labelUnchecked=\"\"\n                      checked={systemProxy?.enabled}\n                      onChange={() => toggleSystemProxy()}\n                    />\n                  </div>\n                </DataRowMain>\n              </DataRow>\n              <DataRow>\n                <DataRowMain>\n                  <div tw=\"font-medium\">{t('home.enhanced_mode')}</div>\n                  <div>\n                    <Toggle\n                      noMargin\n                      label=\"\"\n                      labelChecked=\"\"\n                      labelUnchecked=\"\"\n                      checked={enhancedMode?.enabled}\n                      onChange={() => toggleEnhancedMode()}\n                    />\n                  </div>\n                </DataRowMain>\n              </DataRow>\n            </DataGroup>\n          </VersionSupport>\n\n          <div tw=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 px-4\">\n            {menu.map((item) => {\n              if (\n                typeof item.isEnabled === 'function' &&\n                !item.isEnabled(platform, platformVersion)\n              ) {\n                return null\n              }\n\n              return (\n                <div key={item.title}>\n                  {item.component ? (\n                    item.component\n                  ) : (\n                    <MenuTile onClick={() => openLink(item.link)}>\n                      <MenuTileTitle title={t(`home.${item.title}`)} />\n\n                      {item.subTitle && (\n                        <div tw=\"text-base text-gray-500\">{item.subTitle}</div>\n                      )}\n                    </MenuTile>\n                  )}\n                </div>\n              )\n            })}\n          </div>\n\n          <div tw=\"mt-4 px-4\">\n            <Events />\n          </div>\n\n          <div tw=\"mt-4 px-4\">\n            <Ad />\n          </div>\n\n          <div tw=\"mt-4 px-4\">\n            <ChangeLanguage />\n          </div>\n\n          <div tw=\"text-center mt-4 text-sm\">\n            {Boolean(platform && platformBuild && platformVersion) && (\n              <code tw=\"px-4 py-2 rounded bg-gray-100 text-gray-500\">\n                v{process.env.REACT_APP_VERSION} - {platform} v{platformVersion}\n                ({platformBuild})\n              </code>\n            )}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Page\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled/macro'\nimport React from 'react'\nimport tw from 'twin.macro'\n\nconst PageLayout = styled.main`\n  ${tw`relative antialiased`};\n`\n\nexport default PageLayout\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { find } from 'lodash-es'\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport {\n  Switch,\n  Route,\n  Redirect,\n  useLocation,\n  useHistory,\n} from 'react-router-dom'\nimport loadable from '@loadable/component'\nimport tw from 'twin.macro'\nimport styled from '@emotion/styled/macro'\nimport store from 'store2'\nimport ReactGA from 'react-ga'\nimport { toast, ToastContainer as OriginalToastContainer } from 'react-toastify'\nimport { SWRConfig } from 'swr'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport FullLoading from './components/FullLoading'\nimport NewVersionAlert from './components/NewVersionAlert'\nimport ScrollToTop from './components/ScrollToTop'\nimport NetworkErrorModal from './components/NetworkErrorModal'\nimport {\n  usePlatformVersion,\n  useProfile,\n  useProfileDispatch,\n} from './models/profile'\nimport {\n  RegularLanding as LandingPage,\n  SurgeLanding as SurgeLandingPage,\n} from './pages/Landing'\nimport IndexPage from './pages/Index'\nimport PageLayout from './components/PageLayout'\nimport { Profile } from './types'\nimport { isRunInSurge } from './utils'\nimport {\n  ExistingProfiles,\n  LastUsedLanguage,\n  LastUsedProfile,\n} from './utils/constant'\nimport { httpClient } from './utils/fetcher'\n\nconst PoliciesPage = loadable(() => import('./pages/Policies'), {\n  fallback: <FullLoading />,\n})\nconst RequestsPage = loadable(() => import('./pages/Requests'), {\n  fallback: <FullLoading />,\n})\nconst TrafficPage = loadable(() => import('./pages/Traffic'), {\n  fallback: <FullLoading />,\n})\nconst ModulesPage = loadable(() => import('./pages/Modules'), {\n  fallback: <FullLoading />,\n})\nconst ScriptingPage = loadable(() => import('./pages/Scripting'), {\n  fallback: <FullLoading />,\n})\nconst EvaluatePage = loadable(() => import('./pages/Scripting/Evaluate'), {\n  fallback: <FullLoading />,\n})\nconst DnsPage = loadable(() => import('./pages/Dns'), {\n  fallback: <FullLoading />,\n})\nconst DevicesPage = loadable(() => import('./pages/Devices'), {\n  fallback: <FullLoading />,\n})\nconst ProfilePage = loadable(() => import('./pages/Profiles/Current'), {\n  fallback: <FullLoading />,\n})\nconst ToastContainer = styled(OriginalToastContainer)`\n  ${tw`p-2 md:p-0`}\n\n  .Toastify__toast {\n    ${tw`flex items-center px-3 py-3 bg-blue-100 rounded shadow-none`}\n  }\n  .Toastify__close-button,\n  .Toastify__toast-body {\n    ${tw`text-blue-700`}\n  }\n  .Toastify__toast-body {\n    ${tw`text-base`}\n  }\n  .Toastify__close-button {\n    ${tw`block ml-3 self-center`}\n  }\n  .Toastify__progress-bar {\n    ${tw`bg-blue-200`}\n  }\n  .Toastify__toast--error {\n    ${tw`bg-red-100`}\n\n    .Toastify__close-button, .Toastify__toast-body {\n      ${tw`text-red-700`}\n    }\n    .Toastify__progress-bar {\n      ${tw`bg-red-200`}\n    }\n  }\n  .Toastify__toast--warning {\n    ${tw`bg-orange-100 border-l-4 border-orange-500`}\n\n    .Toastify__close-button, .Toastify__toast-body {\n      ${tw`text-orange-700`}\n    }\n    .Toastify__progress-bar {\n      ${tw`bg-orange-200`}\n    }\n  }\n  .Toastify__toast--success {\n    ${tw`bg-green-100`}\n\n    .Toastify__close-button, .Toastify__toast-body {\n      ${tw`text-green-700`}\n    }\n    .Toastify__progress-bar {\n      ${tw`bg-green-200`}\n    }\n  }\n`\n\nif (\n  !!process.env.REACT_APP_DEBUG_GA ||\n  (process.env.NODE_ENV === 'production' && process.env.REACT_APP_ENABLE_GA)\n) {\n  ReactGA.initialize('UA-146417304-2', {\n    debug: !!process.env.REACT_APP_DEBUG_GA,\n  })\n}\n\nconst App: React.FC = () => {\n  const { t, i18n } = useTranslation()\n  const [isNetworkModalOpen, setIsNetworkModalOpen] = useState(false)\n  const location = useLocation()\n  const history = useHistory()\n  const profileDispatch = useProfileDispatch()\n  const profile = useProfile()\n  const [hasInit, setHasInit] = useState(false)\n  const isCurrentVersionFetched = useRef(true)\n  const platformVersion = usePlatformVersion()\n\n  const onCloseApplication = useCallback(() => {\n    if (isRunInSurge()) {\n      store.remove(LastUsedProfile)\n      store.remove(ExistingProfiles)\n    }\n\n    window.location.replace('/')\n  }, [])\n\n  useEffect(\n    () => {\n      const existingProfiles = store.get(ExistingProfiles)\n      const lastId = store.get(LastUsedProfile)\n      const result = find<Profile>(existingProfiles, { id: lastId })\n\n      if (result) {\n        profileDispatch({\n          type: 'update',\n          payload: result,\n        })\n      }\n\n      setHasInit(true)\n    },\n    // eslint-disable-next-line\n    [],\n  )\n\n  useEffect(() => {\n    if (hasInit && !profile && location.pathname !== '/') {\n      history.replace('/')\n    }\n  }, [hasInit, history, location.pathname, profile])\n\n  useEffect(() => {\n    ReactGA.pageview(location.pathname)\n  }, [location.pathname])\n\n  useEffect(() => {\n    const language: string | null = store.get(LastUsedLanguage)\n\n    if (language && language !== i18n.language) {\n      i18n.changeLanguage(language)\n    }\n  }, [i18n])\n\n  useEffect(() => {\n    if (\n      !profile?.platform ||\n      !isCurrentVersionFetched.current ||\n      location.pathname === '/'\n    ) {\n      return\n    }\n\n    httpClient\n      .request({\n        url: '/environment',\n        method: 'GET',\n      })\n      .then((res) => {\n        const currentPlatformVersion = res.headers['x-surge-version']\n\n        if (currentPlatformVersion !== platformVersion) {\n          profileDispatch({\n            type: 'updatePlatformVersion',\n            payload: {\n              platformVersion: currentPlatformVersion,\n            },\n          })\n        }\n\n        isCurrentVersionFetched.current = false\n      })\n      .catch((err) => {\n        console.error(err)\n        toast.error(t('common.surge_too_old'))\n      })\n  }, [location, platformVersion, profile?.platform, profileDispatch, t])\n\n  return (\n    <SWRConfig\n      value={{\n        onError: (error) => {\n          if (location.pathname !== '/') {\n            if (!error.response && error.request) {\n              // 无法连接服务器\n              setIsNetworkModalOpen(true)\n            }\n          }\n        },\n        refreshWhenOffline: true,\n      }}\n    >\n      <ScrollToTop />\n      <ToastContainer />\n      <NetworkErrorModal\n        reloadButton={isRunInSurge()}\n        isOpen={isNetworkModalOpen}\n        onClose={onCloseApplication}\n      />\n      <NewVersionAlert />\n\n      <PageLayout>\n        <Switch>\n          <Route exact path=\"/\">\n            {isRunInSurge() ? <SurgeLandingPage /> : <LandingPage />}\n          </Route>\n          <Route exact path=\"/home\">\n            <IndexPage />\n          </Route>\n          <Route exact path=\"/policies\">\n            <PoliciesPage />\n          </Route>\n          <Route exact path=\"/requests\">\n            <RequestsPage />\n          </Route>\n          <Route exact path=\"/traffic\">\n            <TrafficPage />\n          </Route>\n          <Route exact path=\"/modules\">\n            <ModulesPage />\n          </Route>\n          <Route exact path=\"/scripting\">\n            <ScriptingPage />\n          </Route>\n          <Route exact path=\"/scripting/evaluate\">\n            <EvaluatePage />\n          </Route>\n          <Route exact path=\"/dns\">\n            <DnsPage />\n          </Route>\n          <Route exact path=\"/devices\">\n            <DevicesPage />\n          </Route>\n          <Route exact path=\"/profiles/current\">\n            <ProfilePage />\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </PageLayout>\n    </SWRConfig>\n  )\n}\n\nexport default App\n","import createCache from '@emotion/cache'\nimport { CacheProvider } from '@emotion/core'\nimport { ModalProvider } from '@sumup/circuit-ui'\nimport { light } from '@sumup/design-tokens'\nimport { ThemeProvider } from 'emotion-theming'\nimport React, { Suspense } from 'react'\nimport {\n  BrowserRouter,\n  BrowserRouterProps,\n  HashRouter,\n  HashRouterProps,\n} from 'react-router-dom'\n\nimport { ProfileProvider } from './models/profile'\n\nconst ReactRouter: React.FC<BrowserRouterProps | HashRouterProps> = (args) => {\n  return process.env.REACT_APP_HASH_ROUTER ? (\n    <HashRouter {...(args as HashRouterProps)}>{args.children}</HashRouter>\n  ) : (\n    <BrowserRouter {...(args as BrowserRouterProps)}>\n      {args.children}\n    </BrowserRouter>\n  )\n}\nconst styleCache = createCache({\n  key: 'yasd',\n})\n\nconst AppContainer: React.FC = ({ children }) => {\n  return (\n    <Suspense fallback={<div />}>\n      <CacheProvider value={styleCache}>\n        <ReactRouter>\n          <ProfileProvider>\n            <ThemeProvider theme={light}>\n              <ModalProvider>{children}</ModalProvider>\n            </ThemeProvider>\n          </ProfileProvider>\n        </ReactRouter>\n      </CacheProvider>\n    </Suspense>\n  )\n}\n\nexport default AppContainer\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport ChainedBackend from 'i18next-chained-backend'\nimport resourcesToBackend from 'i18next-resources-to-backend'\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(ChainedBackend)\n  .init({\n    // debug: true,\n    lng: navigator.language.substr(0, 2),\n    fallbackLng: 'en',\n    supportedLngs: ['en', 'zh'],\n    nonExplicitSupportedLngs: true,\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n    backend: {\n      backends: [\n        resourcesToBackend((lng, ns, clb) => {\n          import(`./${lng}/${ns}.json`)\n            .then((resources) => clb(null, resources))\n            .catch((err) => clb(err, undefined))\n        }),\n      ],\n    },\n  })\n\nexport default i18n\n","/** @jsx jsx */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { jsx } from '@emotion/core'\n\nimport './index.css'\nimport App from './App'\nimport AppContainer from './AppContainer'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport './i18n'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer>\n      <App />\n    </AppContainer>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\nif (process.env.REACT_APP_USE_SW) {\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://cra.link/PWA\n  serviceWorkerRegistration.register()\n}\n\nif (!('scrollBehavior' in document.documentElement.style)) {\n  // @ts-ignore\n  import('smoothscroll-polyfill').then((mod) => {\n    mod.polyfill()\n  })\n}\n","import { unregisterAsync } from '../serviceWorkerRegistration'\n\nexport const isFalsy = (obj: string | boolean | 1 | 0) =>\n  obj === 0 || obj === false || (typeof obj === 'string' && obj.length === 0)\n\nexport const isTruthy = (obj: string | boolean | 1 | 0) =>\n  obj === 1 || obj === true || (typeof obj === 'string' && obj.length > 0)\n\nexport const isRunInSurge = (): boolean =>\n  'REACT_APP_RUN_IN_SURGE' in process.env\n\nexport const forceRefresh = async (): Promise<void> => {\n  if (process.env.REACT_APP_USE_SW) {\n    await unregisterAsync()\n  }\n\n  window.location.reload()\n}\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport css from '@emotion/css/macro'\nimport styled from '@emotion/styled/macro'\nimport tw from 'twin.macro'\nimport React from 'react'\n\nexport const DataGroup: React.FC<{ title?: string }> = (props) => {\n  return (\n    <div>\n      {props.title && (\n        <div tw=\"text-gray-600 text-sm leading-normal px-3 mb-1 truncate lg:text-base lg:leading-relaxed\">\n          {props.title}\n        </div>\n      )}\n      <div tw=\"divide-y divide-gray-200 bg-gray-100 rounded-lg mb-4 overflow-hidden\">\n        {props.children}\n      </div>\n    </div>\n  )\n}\n\nexport const DataRow = styled.div``\n\nexport const DataRowMain = styled.div`\n  ${tw`flex items-center justify-between px-3 py-3 leading-normal text-gray-800`}\n\n  & > div:last-of-type {\n    ${tw`text-gray-600`}\n  }\n`\n\nexport const DataRowSub = styled.div`\n  ${tw`flex items-center justify-between px-3 leading-normal text-xs text-gray-800 lg:text-sm lg:leading-relaxed`}\n\n  & > div:last-of-type {\n    ${tw`text-gray-600`}\n  }\n`\n","import { useState } from 'react'\n\nexport const useSetState = <State = any>(\n  initialState: State | (() => State),\n) => {\n  const [state, setState] = useState<State>(initialState)\n\n  const getState = async (): Promise<State> => {\n    let state: unknown\n\n    await setState((currentState: State) => {\n      state = currentState\n\n      return currentState\n    })\n\n    return state as State\n  }\n\n  return [state, setState, getState] as [\n    State,\n    typeof setState,\n    typeof getState,\n  ]\n}\n","import gte from 'semver/functions/gte'\n\nimport { usePlatform, usePlatformVersion } from '../models/profile'\n\ninterface VersionSupportProps {\n  macos?: string\n  ios?: string\n}\n\nexport const useVersionSupport = ({\n  macos,\n  ios,\n}: VersionSupportProps): boolean => {\n  const platform = usePlatform()\n  const platformVersion = usePlatformVersion()\n\n  if (!platform || !platformVersion) {\n    return false\n  }\n\n  if (macos && platform === 'macos' && gte(platformVersion, macos)) {\n    return true\n  }\n\n  if (ios && platform === 'ios' && gte(platformVersion, ios)) {\n    return true\n  }\n\n  return false\n}\n","export const ExistingProfiles = 'existingProfiles'\nexport const LastUsedProfile = 'lastUsedProfile'\nexport const LastUsedVersion = 'lastUsedVersion'\nexport const LastUsedLanguage = 'lastUsedLanguage'\n","import { FieldError, RegisterOptions } from 'react-hook-form'\n\nexport function getValidationHint(\n  typeMap: {\n    [key in keyof RegisterOptions]?: string\n  } & {\n    [key: string]: any\n  },\n  fieldError?: FieldError,\n): string | undefined {\n  if (!fieldError) return undefined\n\n  for (const key in typeMap) {\n    if (fieldError.type === key) {\n      return typeMap[key]\n    }\n  }\n\n  return fieldError.message\n}\n","import { findIndex } from 'lodash-es'\nimport store from 'store2'\n\nimport { Profile } from '../types'\nimport { ExistingProfiles } from './constant'\n\nexport const updateStoredProfile = (\n  profileId: Profile['id'],\n  newProfile: Profile,\n): void => {\n  const storedExistingProfiles: Profile[] = store.get(ExistingProfiles)\n\n  if (storedExistingProfiles) {\n    const result = findIndex(storedExistingProfiles, { id: profileId })\n\n    if (result !== -1) {\n      storedExistingProfiles.splice(result, 1, newProfile)\n      store.set(ExistingProfiles, storedExistingProfiles)\n    }\n  }\n}\n","import React, { createContext, Dispatch, Reducer, useReducer } from 'react'\n\nimport { Profile } from '../types'\nimport { setServer } from '../utils/fetcher'\nimport { updateStoredProfile } from '../utils/store'\n\ninterface IProfileContext {\n  profile?: Profile\n}\n\ntype ReducerAction =\n  | {\n      type: 'update'\n      payload: Profile\n    }\n  | {\n      type: 'clear'\n    }\n  | {\n      type: 'updatePlatformVersion'\n      payload: {\n        platformVersion: Profile['platformVersion']\n      }\n    }\n\nconst profileReducer: Reducer<IProfileContext, ReducerAction> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'update':\n      setServer(action.payload.host, action.payload.port, action.payload.key, {\n        tls: action.payload.tls,\n      })\n      return {\n        profile: action.payload,\n      }\n    case 'clear':\n      return {\n        profile: undefined,\n      }\n    case 'updatePlatformVersion': {\n      if (!state.profile) {\n        throw new Error(\n          'updatePlatformVersion cannot be dispatched if the profile is absent.',\n        )\n      }\n\n      const profile = state.profile\n      const updated = {\n        ...profile,\n        platformVersion: action.payload.platformVersion,\n      }\n\n      updateStoredProfile(updated.id, updated)\n\n      return {\n        profile: updated,\n      }\n    }\n    default:\n      throw new Error()\n  }\n}\n\nconst ProfileContext = createContext<IProfileContext>({\n  profile: undefined,\n})\n\nconst ProfileDispatchContext = createContext<\n  Dispatch<ReducerAction> | undefined\n>(undefined)\n\nexport const ProfileProvider: React.FC = (props) => {\n  const [state, dispatch] = useReducer(profileReducer, {\n    profile: undefined,\n  })\n\n  return (\n    <ProfileContext.Provider value={state}>\n      <ProfileDispatchContext.Provider value={dispatch}>\n        {props.children}\n      </ProfileDispatchContext.Provider>\n    </ProfileContext.Provider>\n  )\n}\n\nexport const useProfile = (): Profile | undefined => {\n  const context = React.useContext(ProfileContext)\n\n  return context.profile\n}\n\nexport const usePlatform = (): Profile['platform'] | undefined => {\n  const context = React.useContext(ProfileContext)\n\n  return context.profile?.platform\n}\nexport const usePlatformVersion = ():\n  | Profile['platformVersion']\n  | undefined => {\n  const context = React.useContext(ProfileContext)\n\n  return context.profile?.platformVersion\n}\nexport const usePlatformBuild = (): Profile['platformBuild'] | undefined => {\n  const context = React.useContext(ProfileContext)\n\n  return context.profile?.platformBuild\n}\n\nexport const useSurgeHost = (): string | null => {\n  const context = React.useContext(ProfileContext)\n\n  if (!context.profile) return null\n\n  const { tls, host, port } = context.profile\n\n  return `${tls ? 'https:' : 'http:'}//${host}:${port}`\n}\n\nexport const useProfileDispatch = (): Dispatch<ReducerAction> => {\n  const context = React.useContext(ProfileDispatchContext)\n\n  if (!context) {\n    throw new Error()\n  }\n\n  return context\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n\nexport async function unregisterAsync() {\n  if ('serviceWorker' in navigator) {\n    return navigator.serviceWorker.ready.then((registration) => {\n      return registration.unregister()\n    })\n  }\n}\n"],"sourceRoot":""}