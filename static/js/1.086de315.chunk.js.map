{"version":3,"sources":["../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@sumup/icons/dist/es/ChevronLeft.js","../node_modules/@sumup/icons/dist/es/Spinner.js","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/@sumup/circuit-ui/dist/es/components/Selector/Selector.js","../node_modules/@sumup/circuit-ui/dist/es/components/Selector/index.js","../node_modules/@sumup/circuit-ui/dist/es/components/SelectorGroup/SelectorGroup.js","../node_modules/@sumup/circuit-ui/dist/es/components/SelectorGroup/index.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js"],"names":["_typeof","assertThisInitialized","module","exports","self","call","TypeError","__esModule","ReferenceError","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","prototype","create","constructor","value","writable","configurable","ChevronLeft","props","React","createElement","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","defaultProps","width","height","viewBox","fill","xmlns","Spinner","objectWithoutPropertiesLoose","source","excluded","key","i","target","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","propertyIsEnumerable","createDetectElementResize","nonce","hostWindow","_window","attachEvent","window","global","document","requestFrame","raf","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","setTimeout","cancelFrame","cancel","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","id","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","style","offsetWidth","offsetHeight","scrollListener","e","className","this","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","forEach","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","undefined","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","position","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","push","removeResizeListener","detachEvent","splice","removeEventListener","removeChild","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","_ref2","_lastMeasuredIndex","index","Error","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","cachedIndices","callback","indices","keys","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","scrollbarSize","recalc","canUseDOM","scrollDiv","top","overflow","body","clientWidth","_class","_temp","request","oRequestAnimationFrame","msRequestAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","getOwnPropertyDescriptors","defineProperties","defineProperty","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_possibleConstructorReturn","_assertThisInitialized","_disablePointerEventsTimeoutId","setState","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","state","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","prevState","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","prevProps","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_extends","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","nextProps","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","polyfill","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","bind","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","result","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","get","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","keyMapper","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","SortDirection","ASC","DESC","SortIndicator","sortDirection","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","minWidth","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","SelectorLabel","styled","theme","spacings","mega","giga","borderRadius","colors","white","borderWidth","kilo","n300","n100","n500","n200","n700","disableVisually","noMargin","deprecate","SelectorInput","hideVisually","focusOutline","p100","p500","Selector","forwardRef","name","multiple","checked","onChange","tracking","inputId","uniqueId","handleChange","useClickHandler","jsx","Fragment","htmlFor","displayName","SelectorGroup","options","activeValue","customName","includes","sourceKeys","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arrayLikeToArray","iter","Symbol","iterator","from"],"mappings":"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","file":"static/js/1.086de315.chunk.js","sourcesContent":["var _typeof = require(\"@babel/runtime/helpers/typeof\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import React from \"react\";\n\nvar ChevronLeft = function ChevronLeft(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", props, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 4L6 8l4 4\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }));\n};\n\nChevronLeft.defaultProps = {\n  width: \"16\",\n  height: \"16\",\n  viewBox: \"0 0 16 16\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n};\nexport { ChevronLeft };","import React from \"react\";\n\nvar Spinner = function Spinner(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", props, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 8a1 1 0 00-2 0h2zm6-8a1 1 0 000 2V0zm6 8a6 6 0 01-6 6v2a8 8 0 008-8h-2zm-6 6a6 6 0 01-6-6H0a8 8 0 008 8v-2zM8 2a6 6 0 016 6h2a8 8 0 00-8-8v2z\",\n    fill: \"currentColor\"\n  }));\n};\n\nSpinner.defaultProps = {\n  width: \"16\",\n  height: \"16\",\n  viewBox: \"0 0 16 16\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n};\nexport { Spinner };","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport React, { Fragment } from 'react';\nimport { css, jsx } from '@emotion/core';\nimport styled from '../../styles/styled';\nimport { focusOutline, hideVisually, disableVisually, } from '../../styles/style-mixins';\nimport { uniqueId } from '../../util/id';\nimport useClickHandler from '../../hooks/use-click-handler';\nimport deprecate from '../../util/deprecate';\nconst baseStyles = ({ theme }) => css `\n  label: selector__label;\n  display: block;\n  cursor: pointer;\n  padding: ${theme.spacings.mega} ${theme.spacings.giga};\n  border-radius: ${theme.borderRadius.giga};\n  background-color: ${theme.colors.white};\n  text-align: center;\n  position: relative;\n  margin-bottom: ${theme.spacings.mega};\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: ${theme.borderRadius.giga};\n    border: ${theme.borderWidth.kilo} solid ${theme.colors.n300};\n    transition: border 0.1s ease-in-out;\n  }\n\n  &:hover {\n    background-color: ${theme.colors.n100};\n\n    &::before {\n      border-color: ${theme.colors.n500};\n    }\n  }\n\n  &:active {\n    background-color: ${theme.colors.n200};\n\n    &::before {\n      border-color: ${theme.colors.n700};\n    }\n  }\n`;\nconst disabledStyles = ({ disabled }) => disabled &&\n    css `\n    label: selector__label--disabled;\n    ${disableVisually()};\n  `;\nconst noMarginStyles = ({ noMargin }) => {\n    if (!noMargin) {\n        deprecate([\n            'The default outer spacing in the Selector component is deprecated.',\n            'Use the `noMargin` prop to silence this warning.',\n            'Read more at https://github.com/sumup-oss/circuit-ui/issues/534.',\n        ].join(' '));\n        return null;\n    }\n    return css `\n    label: selector__label--no-margin;\n    margin-bottom: 0;\n  `;\n};\nconst SelectorLabel = styled('label')(baseStyles, disabledStyles, noMarginStyles);\nconst inputStyles = ({ theme }) => css `\n  label: selector__input;\n  ${hideVisually()};\n\n  &:focus + label::before {\n    ${focusOutline({ theme })};\n  }\n\n  &:checked + label {\n    background-color: ${theme.colors.p100};\n\n    &::before {\n      border: ${theme.borderWidth.mega} solid ${theme.colors.p500};\n    }\n  }\n`;\nconst SelectorInput = styled('input')(inputStyles);\n/**\n * A selector allows users to choose between several mutually-exclusive choices\n * accompanied by descriptions, possibly with tabular data.\n */\nexport const Selector = React.forwardRef(({ children, value, id, name, disabled, multiple, checked, onChange, tracking, className, style, noMargin, ...props }, ref) => {\n    const inputId = id || uniqueId('selector_');\n    const type = multiple ? 'checkbox' : 'radio';\n    const handleChange = useClickHandler(onChange, tracking, 'selector');\n    return (jsx(Fragment, null,\n        jsx(SelectorInput, Object.assign({ type: type, id: inputId, name: name, value: value, checked: checked, disabled: disabled, onClick: handleChange, onChange: () => {\n                /**\n                 * Noop to silence React warning:\n                 * https://github.com/facebook/react/issues/3070#issuecomment-73311114\n                 * Change is handled by onClick which has better browser support:\n                 * https://stackoverflow.com/a/5575369/4620154\n                 */\n            }, ref: ref }, props)),\n        jsx(SelectorLabel, { htmlFor: inputId, disabled: disabled, className: className, style: style, noMargin: noMargin }, children)));\n});\nSelector.displayName = 'Selector';\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Selector } from './Selector';\nexport default Selector;\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport React from 'react';\nimport { includes } from 'lodash/fp';\nimport { jsx } from '@emotion/core';\nimport { uniqueId } from '../../util/id';\nimport Selector from '../Selector';\n/**\n * A group of Selectors.\n */\nexport const SelectorGroup = React.forwardRef(({ options, onChange, value: activeValue, name: customName, label, multiple, ...props }, ref) => {\n    const name = customName || uniqueId('selector-group_');\n    return (jsx(\"div\", Object.assign({ role: \"group\", \"aria-label\": label, ref: ref }, props), options &&\n        options.map(({ children, value, ...rest }) => (jsx(Selector, Object.assign({ key: value }, { ...rest, value, name, onChange, multiple }, { checked: multiple ? includes(value, activeValue) : value === activeValue }), children)))));\n});\nSelectorGroup.displayName = 'SelectorGroup';\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SelectorGroup } from './SelectorGroup';\nexport default SelectorGroup;\n","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;"],"sourceRoot":""}